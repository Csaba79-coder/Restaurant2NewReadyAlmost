1. Készleteink feltöltése:
	1.1. lépés: hozzunk létre StorageElement osztályokat
		- Kell egy ősosztály
			tartalmazza a közös változókat és metódusokat
		- Kell minden kategóriának 1-1 osztály
			tartalmazzák a saját változóikat és metódusaikat

	1.2. lépés: adatok beolvasása
		- BufferedReader
		- beolvassuk a fájlt
		- végigmegyünk egyessével a sorokon és létrehozzuk a saját
			storage subelement objektum listánkat
		- végeredmény 3 lista: List<Drink>, List<Tool>, List<Meal>

2. Készleteink kezelése:
	2.1. lépés: változtassuk meg a Tools.txt paramétereit,
		hogy egyértelműsítsük, hogy mihez mi kell
			name,amount,isMealTool,isDrinkTool
		- refaktorálni (kibővíteni) a Tool osztályt
		- refaktorálni (kibővíteni) a Tool feltöltését (DocumentReader)
		- updatelni a Tools.txt input fájlt

	2.2.1. lépés: hozzunk létre metódusokat a Drink és Meal példányok
		mennyiség csökkentésére
		- visszatérési érték: Boolean (sikerült-e)
		- bemeneti paraméter: Drink / Meal (overload), amount
		- validálás: van elég mennyiségünk?
			- igen:
				- Tool-k mennyiségcsökkentése (4.2)
					- visszatérés ellenörzése:
						igen:
							- Drink / Meal mennyiség csökkentés
								-> visszatérés: true
						nem: visszatérés: false
			- nem: visszatérés: false

	2.2.2. lépés: hozzunk létre metódust a Tool példányok
		mennyiség csökkentésére
		- visszatérési érték: Boolean
		- bemeneti paraméter: String type ("drink" / "meal"), amount
		- végigmegyünk a List<Tool> tools listánkon
			- megnézzük, hogy szükséges-e az adott type-hoz
				- igen:
					- Tool mennyiség csökkentés (+amount check)
						-> visszatérés: true
				- nem: visszatérés: false

    2.2.4. lépés: adjuk hozzá egy metódust a StorageElement ősosztályhoz
        az amount csökkentésére

3. Asztalok kezelése:
	3.1. lépés: Hozzuk létre a Table osztályt, a vendégek kezelésére
		- bemeneti paraméter: jelenleg nincs
		- ID: az asztal száma, egyedi azonosító, osztályon belül állítjuk be
		- List<Drink>: rendelt italok listája
		- List<Meal>: rendelt ételek listája
		- List<Tool>: a rendelt ételekhez, italokhoz szükséges eszközök listája

4. Nyitásra való előkészülés:
	4.1. lépés: Hozzunk létre egy új osztályt a requestek kezelésére
		4.1.1. lépés: Készítsük elő az asztalokat
			- legyen meghatározható a szükséges asztalok száma

		4.1.2. lépés: Készítsük elő a készleteinket

5. Rendelések kezelése:
	5.1. lépés: Rendelések felvétele (Flóra random generátora)
		- bekérünk egy int-t, ami a vendégek száma
		- minden vendégnek random adunk egy rendelési mennyiséget
		- minden rendelésnél random eldöntjük, hogy ételt vagy italt tartalmaz
		- random választunk a menüből

		5.1.1. lépés: Létrehozunk egy új osztályt a rendelés felvételéhez
			5.1.1.1. lépés: Bekérjük hány vendég jött
				Scanner(System.in) a terminálos beolvasáshoz:
					- Viszatérési értéke: int numOfCustomers
			5.1.1.2. lépés: random generáljuk a rendelést
				- minden vendégnek random adunk egy rendelési mennyiséget
				- minden rendelésnél random eldöntjük, hogy ételt vagy italt tartalmaz
				- random választunk a menüből

		- visszatérési érték: List<Drink>, List<Meal>

